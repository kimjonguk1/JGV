<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dev.jwkim.jgv.mappers.user.UserMapper">

    <insert id="insertUser"
    parameterType="dev.jwkim.jgv.entities.user.UserEntity">
        INSERT INTO `jgv`.`user` (`us_id`, `us_pw`, `us_name`, `us_nickname`, `us_birth`, `us_gender`, `us_email`, `us_contact`, `us_addr`, `us_created_at`, `us_updated_at`,`us_is_deleted`,`us_is_admin` ,`us_is_suspended`, `us_verified`)
        VALUES (#{usId}, #{usPw}, #{usName}, #{usNickName}, #{usBirth}, #{usGender}, #{usEmail}, #{usContact}, #{usAddr}, #{usCreatedAt}, #{usUpdatedAt}, #{usIsDeleted}, #{usIsAdmin}, #{usIsSuspended}, #{usIsVerified})
    </insert>
    <update id="updateUser"
    parameterType="dev.jwkim.jgv.entities.user.UserEntity">
    UPDATE `jgv`.`user`
    SET `us_id` = #{usId},
        `us_pw` = #{usPw},
        `us_nickname` = #{usNickName},
        `us_contact` = #{usContact},
        `us_addr` = #{usAddr},
        `us_updated_at` = #{usUpdatedAt},
        `us_is_deleted` = #{usIsDeleted},
        `us_is_admin` = #{usIsAdmin},
        `us_is_suspended` = #{usIsSuspended},
        `us_verified` = #{usIsVerified}
    WHERE `us_email` = #{usEmail}
    LIMIT 1

    </update>

    <select id="selectUserByEmail"
            resultType="dev.jwkim.jgv.entities.user.UserEntity">
        SELECT us_num          AS `usNum`,
               us_id           AS `usId`,
               us_pw           AS `usPw`,
               us_name         AS `usName`,
               us_nickname     AS `usNickName`,
               us_birth        AS `usBirth`,
               us_gender       AS `usGender`,
               us_email        AS `usEmail`,
               us_contact      AS `usContact`,
               us_addr         AS `usAddr`,
               us_created_at   AS `usCreatedAt`,
               us_updated_at   AS `usUpdatedAt`,
               us_is_deleted   AS `usIsDeleted`,
               us_is_admin     AS `usIsAdmin`,
               us_is_suspended AS `usIsSuspended`,
               us_verified     AS `usIsVerified`
        FROM `jgv`.`user`
        WHERE `us_email` = #{usEmail}
        LIMIT 1
    </select>

    <select id="selectUserByContact"
            resultType="dev.jwkim.jgv.entities.user.UserEntity">
        SELECT us_num          AS `usNum`,
               us_id           AS `usId`,
               us_pw           AS `usPw`,
               us_name         AS `usName`,
               us_nickname     AS `usNickName`,
               us_birth        AS `usBirth`,
               us_gender       AS `usGender`,
               us_email        AS `usEmail`,
               us_contact      AS `usContact`,
               us_addr         AS `usAddr`,
               us_created_at   AS `usCreatedAt`,
               us_updated_at   AS `usUpdatedAt`,
               us_is_deleted   AS `usIsDeleted`,
               us_is_admin     AS `usIsAdmin`,
               us_is_suspended AS `usIsSuspended`,
               us_verified     AS `usIsVerified`
        FROM `jgv`.`user`
        WHERE `us_contact` = #{usContact}
        LIMIT 1
    </select>

    <select id="selectUserByNickname"
            resultType="dev.jwkim.jgv.entities.user.UserEntity">
        SELECT us_num          AS `usNum`,
               us_id           AS `usId`,
               us_pw           AS `usPw`,
               us_name         AS `usName`,
               us_nickname     AS `usNickName`,
               us_birth        AS `usBirth`,
               us_gender       AS `usGender`,
               us_email        AS `usEmail`,
               us_contact      AS `usContact`,
               us_addr         AS `usAddr`,
               us_created_at   AS `usCreatedAt`,
               us_updated_at   AS `usUpdatedAt`,
               us_is_deleted   AS `usIsDeleted`,
               us_is_admin     AS `usIsAdmin`,
               us_is_suspended AS `usIsSuspended`,
               us_verified     AS `usIsVerified`
        FROM `jgv`.`user`
        WHERE `us_nickname` = #{usNickname}
        LIMIT 1
    </select>

    <select id="selectUserById" resultType="dev.jwkim.jgv.entities.user.UserEntity">
        SELECT us_num          AS `usNum`,
               us_id           AS `usId`,
               us_pw           AS `usPw`,
               us_name         AS `usName`,
               us_nickname     AS `usNickName`,
               us_birth        AS `usBirth`,
               us_gender       AS `usGender`,
               us_email        AS `usEmail`,
               us_contact      AS `usContact`,
               us_addr         AS `usAddr`,
               us_created_at   AS `usCreatedAt`,
               us_updated_at   AS `usUpdatedAt`,
               us_is_deleted   AS `usIsDeleted`,
               us_is_admin     AS `usIsAdmin`,
               us_is_suspended AS `usIsSuspended`,
               us_verified     AS `usIsVerified`
        FROM `jgv`.`user`
        WHERE `us_id` = #{id}
        LIMIT 1
    </select>

    <select id="FindUserByEmail" resultType="dev.jwkim.jgv.entities.user.UserEntity">
        SELECT us_num          AS `usNum`,
               us_id           AS `usId`,
               us_pw           AS `usPw`,
               us_name         AS `usName`,
               us_nickname     AS `usNickName`,
               us_birth        AS `usBirth`,
               us_gender       AS `usGender`,
               us_email        AS `usEmail`,
               us_contact      AS `usContact`,
               us_addr         AS `usAddr`,
               us_created_at   AS `usCreatedAt`,
               us_updated_at   AS `usUpdatedAt`,
               us_is_deleted   AS `usIsDeleted`,
               us_is_admin     AS `usIsAdmin`,
               us_is_suspended AS `usIsSuspended`,
               us_verified     AS `usIsVerified`
        FROM `jgv`.`user`
        WHERE `us_name` = #{usName}
          AND `us_email` = #{usEmail}
          AND `us_contact` = #{usContact}
        LIMIT 1
    </select>
    <select id="FindUserById" resultType="dev.jwkim.jgv.entities.user.UserEntity">
        SELECT us_num          AS `usNum`,
               us_id           AS `usId`,
               us_pw           AS `usPw`,
               us_name         AS `usName`,
               us_nickname     AS `usNickName`,
               us_birth        AS `usBirth`,
               us_gender       AS `usGender`,
               us_email        AS `usEmail`,
               us_contact      AS `usContact`,
               us_addr         AS `usAddr`,
               us_created_at   AS `usCreatedAt`,
               us_updated_at   AS `usUpdatedAt`,
               us_is_deleted   AS `usIsDeleted`,
               us_is_admin     AS `usIsAdmin`,
               us_is_suspended AS `usIsSuspended`,
               us_verified     AS `usIsVerified`
        FROM `jgv`.`user`
        WHERE `us_id` = #{usId}
          AND `us_email` = #{usEmail}
          AND `us_contact` = #{usContact}

        LIMIT 1
    </select>

    <select id="selectUnverifiedUsersWithExpiredToken"
            resultType="dev.jwkim.jgv.entities.user.UserEntity">
        SELECT us_num          AS `usNum`,
               us_id           AS `usId`,
               us_pw           AS `usPw`,
               us_name         AS `usName`,
               us_nickname     AS `usNickName`,
               us_birth        AS `usBirth`,
               us_gender       AS `usGender`,
               us_email        AS `usEmail`,
               us_contact      AS `usContact`,
               us_addr         AS `usAddr`,
               us_created_at   AS `usCreatedAt`,
               us_updated_at   AS `usUpdatedAt`,
               us_is_deleted   AS `usIsDeleted`,
               us_is_admin     AS `usIsAdmin`,
               us_is_suspended AS `usIsSuspended`,
               us_verified     AS `usIsVerified`,
               em_email        AS `emEmail`,
               em_key          AS `emKey`,
               em_created_at   AS `emCreatedAt`,
               em_expires_at   AS `emExpiresAt`,
               em_is_used      AS `emIsUsed`
        FROM `jgv`.`user`
                 JOIN `jgv`.`email_tokens` ON user.`us_email` = email_tokens.`em_email`
        WHERE `us_verified` = FALSE
          AND #{now} > em_expires_at
    </select>

    <delete id="deleteUserById">
        DELETE FROM `jgv`.`user` WHERE `us_id` = #{usId}
    </delete>

    <select id="selectPaymentByUsNum" resultType="dev.jwkim.jgv.vos.user.ReservationVo">
        SELECT
            payment.`pa_num`       AS `paNum`,
            `pa_price`             AS `paPrice`,
            `pa_created_at`        AS `paCreatedAt`,
            cinema.`ci_name`       AS `ciName`,
            theater.`th_name`      AS `thName`,
            screen.`sc_start_date` AS `scStartDate`,
            GROUP_CONCAT(seat.`se_name` ORDER BY seat.`se_name` ASC) AS `seNames`, -- 여러 좌석을 합침
            seat.`se_name`  AS `seName`,
            movie_image.`m_img_url`  AS `mImgUrl`,
            movie.`mo_title`       AS `moTitle`,
            `me_name`              AS `meName`,
            `pa_deleted_at`        AS `paDeletedAt`,
            movie.`mo_num`         AS `moNum`
        FROM
            jgv.payment
                LEFT JOIN
            jgv.reservation ON payment.pa_num = reservation.pa_num
                LEFT JOIN
            jgv.screen ON reservation.sc_num = screen.sc_num
                LEFT JOIN
            jgv.cinema ON screen.ci_num = cinema.ci_num
                LEFT JOIN
            jgv.theater ON cinema.th_num = theater.th_num
                LEFT JOIN
            jgv.seat ON reservation.se_num = seat.se_num
                LEFT JOIN
            jgv.movie ON screen.mo_num = movie.mo_num
                LEFT JOIN
            jgv.movie_image ON movie.mo_num = movie_image.mo_num
                LEFT JOIN
            jgv.method ON payment.me_num = method.me_num
        WHERE
            `us_num` = #{usNum}
          AND `pa_state` = TRUE
          AND `pa_deleted_at` IS NULL
        GROUP BY
            payment.`pa_num` -- paNum별로 그룹화
        ORDER BY payment.pa_num DESC
        LIMIT
            #{limitCount} OFFSET #{offsetCount}; -- 페이지네이션 적용
    </select>
    <select id="selectCancelPaymentByUsNum" resultType="dev.jwkim.jgv.vos.user.ReservationVo">
        select payment.`pa_num`       as `paNum`,
               `pa_price`             as `paPrice`,
               `pa_created_at`        as `paCreatedAt`,
               cinema.`ci_name`       as `ciName`,
               theater.`th_name`      as `thName`,
               screen.`sc_start_date` as `scStartDate`,
               seat.`se_name`         as `seName`,
               movie_image.m_img_url  as `mImgUrl`,
               movie.`mo_title`       as `moTitle`,
               `me_name`              as `meName`,
               `pa_deleted_at`        as `paDeletedAt`
        from jgv.payment
                 left join jgv.reservation on payment.pa_num = reservation.pa_num
                 left join jgv.screen on reservation.sc_num = screen.sc_num
                 left join jgv.cinema on screen.ci_num = cinema.ci_num
                 left join jgv.theater on cinema.th_num = theater.th_num
                 left join jgv.seat on reservation.se_num = seat.se_num
                 left join jgv.movie on screen.mo_num = movie.mo_num
                 left join jgv.movie_image on movie.mo_num = movie_image.mo_num
                 left join jgv.method on payment.me_num = method.me_num

        where `us_num` = #{usNum}
          and `pa_state` = false
          and `pa_deleted_at` is not null
        ORDER BY payment.pa_num DESC

    </select>
    <select id="selectCancelPaNumByPayment" resultType="dev.jwkim.jgv.entities.ticket.PaymentEntity">
        select `pa_num`        as `paNum`,
               `pa_state`      as `paState`,
               `pa_deleted_at` as `paDeletedAt`
        from jgv.payment
        where `pa_num` = #{paNum}
          and `pa_price` = #{paPrice}
          and `pa_created_at` LIKE CONCAT('%', #{paCreatedAt}, '%')
          and `us_num` = #{usNum}
          and `pa_state` = true
          and `pa_deleted_at` is null;
    </select>

    <update id="updatePaymentState">
        update jgv.payment
        set pa_state = #{paState},
            pa_deleted_at = #{paDeletedAt}
        where pa_num = #{paNum}
          and us_num = #{usNum};
    </update>

    <select id="selectArticleByUsNumCount" resultType="java.lang.Integer">
        select count(*)
        from jgv.payment
        where `us_num` = #{usNum}
          and `pa_state` = true
          and `pa_deleted_at` is null;
    </select>
    <select id="findAllReservations"
            resultType="java.lang.Integer">
        select count(*)
        from jgv.payment
        where `us_num` = #{usNum}
          and `pa_state` = true
          and `pa_deleted_at` is null;
    </select>
    <select id="selectUserByUserId" resultType="dev.jwkim.jgv.entities.user.UserEntity">
        SELECT us_num          AS `usNum`,
               us_id           AS `usId`,
               us_pw           AS `usPw`,
               us_name         AS `usName`,
               us_nickname     AS `usNickName`,
               us_birth        AS `usBirth`,
               us_gender       AS `usGender`,
               us_email        AS `usEmail`,
               us_contact      AS `usContact`,
               us_addr         AS `usAddr`,
               us_created_at   AS `usCreatedAt`,
               us_updated_at   AS `usUpdatedAt`,
               us_is_deleted   AS `usIsDeleted`,
               us_is_admin     AS `usIsAdmin`,
               us_is_suspended AS `usIsSuspended`,
               us_verified     AS `usIsVerified`
        FROM `jgv`.`user`
        WHERE `us_email` = #{id}
        LIMIT 1
    </select>
</mapper>
