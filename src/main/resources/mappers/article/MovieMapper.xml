<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dev.jwkim.jgv.mappers.movie.MovieMapper">

    <insert id="insertMovie"
            useGeneratedKeys="true"
            keyColumn="moNum"
            keyProperty="movie.moNum">
        INSERT INTO `jgv`.movie (mo_title, mo_date, mo_time, mo_plot, mo_booking_rate, mo_ending, ra_num)
        VALUES (#{movie.moTitle},#{movie.moDate},#{movie.moTime},#{movie.moPlot},#{movie.moBookingRate},#{movie.moEnding}, #{raiting})
    </insert>
    <delete id="deleteDupleMovies">
        DELETE FROM `jgv`.movie
        WHERE movie.mo_num NOT IN (
            SELECT MoNum
            FROM (
                     SELECT MIN(mo_num) AS MoNum
                     FROM jgv.movie
                     GROUP BY mo_title, mo_date, mo_time
                 ) AS unique_movies
        );
    </delete>
    <select id="selectMovie" resultType="java.lang.Integer">
        SELECT COUNT(0)
        FROM jgv.movie
    </select>
    <select id="selectAllMovies" resultType="dev.jwkim.jgv.DTO.Movie_ImageDTO">
        SELECT
            m.mo_num AS 'moNum',
            m.mo_title AS 'moTitle',
            m.mo_date AS 'moDate',
            m.mo_time AS 'moTime',
            m.mo_plot AS 'moPlot',
            m.mo_booking_rate AS 'moBookingRate',
            i.m_img_url AS 'm_img_url'
        FROM
            jgv.movie m
                LEFT JOIN
            jgv.movie_image i ON m.mo_num = i.mo_num
    </select>
    <select id="selectMovieByUniqueFields" resultType="java.lang.Integer">
        SELECT *
        FROM jgv.movie
        WHERE mo_title = #{movieTitle}
        AND mo_date = #{movieDate}
        LIMIT 1
    </select>
    
    <select id="selectMovieIdByTitle" parameterType="String" resultType="Integer">
        SELECT mo_num
        FROM jgv.movie
        WHERE mo_title = #{movieTitle}
    </select>
    <select id="selectMovieRaitingByMovieId" resultType="Integer" parameterType="int">
        SELECT ra_num
        FROM jgv.movie
        WHERE mo_num = #{moNum}
    </select>

    <update id="updateMovieRaiting" parameterType="map">
        UPDATE jgv.movie
        SET ra_num = #{raId}
        WHERE mo_num = #{moNum}
    </update>

    <update id="updateMovie" parameterType="dev.jwkim.jgv.entities.movie.MovieEntity">
        UPDATE jgv.movie
        SET mo_date = #{moDate},
            mo_time = #{moTime},
            mo_plot = #{moPlot},
            mo_booking_rate = #{moBookingRate}
        WHERE mo_num = #{moNum}
    </update>

    <select id="getMovieInfoById" parameterType="int" resultType="dev.jwkim.jgv.DTO.Movie_InfoDTO">
        SELECT m.mo_num AS moNum,
               mo_title AS moTitle,
               i.m_img_url AS m_img_url,
               mo_date AS moDate,
               mo_time AS moTime,
               mo_plot AS moPlot,
               mo_booking_rate AS moBookingRate,
               r.ra_grade AS grade,
               GROUP_CONCAT(DISTINCT g.ge_name) AS genres,
               GROUP_CONCAT(DISTINCT y.co_name) AS countries,
               d.ch_name AS directorName,
               d_img.c_img_url AS directorImage,
               GROUP_CONCAT(DISTINCT a.ch_name) AS actorNames,
               GROUP_CONCAT(a_img.c_img_url) AS actorImages
        FROM jgv.movie m
                 LEFT JOIN jgv.movie_image i ON m.mo_num = i.mo_num
                 LEFT JOIN jgv.rating r ON m.ra_num = r.ra_num
                 LEFT JOIN jgv.movie_genere mg ON m.mo_num = mg.mo_num
                 LEFT JOIN jgv.genre g ON mg.ge_num = g.ge_num
                 LEFT JOIN jgv.movie_country my ON m.mo_num = my.mo_num
                 LEFT JOIN jgv.country y ON my.co_num = y.co_num

                 LEFT JOIN jgv.movie_charactor mc ON m.mo_num = mc.mo_num
                 LEFT JOIN jgv.charactor d ON mc.ch_num = d.ch_num AND d.ch_job = '감독'
                 LEFT JOIN jgv.charactor a ON mc.ch_num = a.ch_num AND a.ch_job = '배우'
                 LEFT JOIN jgv.charactor_image d_img ON d.ch_num = d_img.ch_num
                 LEFT JOIN jgv.charactor_image a_img ON a.ch_num = a_img.ch_num
        WHERE m.mo_num = #{id}
        GROUP BY m.mo_num
    </select>

    <select id="getRelatedMoviesByDirector" resultType="Map">
        SELECT m.mo_title AS movieTitle,
               mi.m_img_url AS movieImage
        FROM jgv.movie m
        INNER JOIN jgv.movie_charactor mc ON m.mo_num = mc.mo_num
        INNER JOIN jgv.charactor c ON mc.ch_num = c.ch_num
        LEFT JOIN jgv.movie_image mi on m.mo_num = mi.mo_num
        WHERE c.ch_job = '감독'
        AND c.ch_name = #{director}
        ORDER BY m.mo_date DESC
        LIMIT 5
    </select>

    <select id="findMovieByKeyword" resultType="dev.jwkim.jgv.DTO.Movie_ImageDTO">
        SELECT m.mo_num AS moNum,
               mo_title AS moTitle,
               mo_date AS moDate,
               mo_time AS moTime,
               mo_plot AS moPlot,
               mo_booking_rate AS moBookingRate,
               ra_num AS raNum,
               m_img_url AS m_img_url
        FROM jgv.movie m
                 LEFT JOIN jgv.movie_image mi on m.mo_num = mi.mo_num
        WHERE m.mo_title LIKE CONCAT('%', #{keyword}, '%')
    </select>

    <select id="findCharacterByKeyword" resultType="dev.jwkim.jgv.DTO.CharacterDTO">
        SELECT c.ch_num AS chNum,
               ch_name AS chName,
               ch_job AS chJob,
               ch_birth AS chBirth,
               ch_nation AS chNation,
               MIN(c_img_num) AS CImgNum, -- 가장 작은 이미지 번호
               MIN(c_img_url) AS CImgUrl -- 가장 작은 번호의 이미지 URL
        FROM jgv.charactor c
                 LEFT JOIN jgv.charactor_image ci ON c.ch_num = ci.ch_num
        WHERE c.ch_name LIKE CONCAT('%', #{keyword}, '%')
        GROUP BY c.ch_num, ch_name, ch_job, ch_birth, ch_nation
    </select>



    <select id="searchMoviesByPersonKeyword" resultType="dev.jwkim.jgv.DTO.Movie_ImageDTO">
        SELECT m.mo_num AS moNum,
               mo_title AS moTitle,
               mo_date AS moDate,
               mo_time AS moTime,
               mo_plot AS moPlot,
               mo_booking_rate AS moBookingRate,
               mc.ch_num AS chNum,
               mc.mo_num AS moNum,
               i.m_img_url AS m_img_url
        FROM jgv.movie m
                 INNER JOIN jgv.movie_charactor mc ON m.mo_num = mc.mo_num
                 INNER JOIN jgv.charactor c ON mc.ch_num = c.ch_num
        INNER JOIN jgv.movie_image i ON m.mo_num = i.mo_num
        WHERE c.ch_name LIKE CONCAT('%', #{keyword}, '%')
    </select>

    <select id="findMoviesByActorName" resultType="Map">
        SELECT m.mo_num AS moNum,
            m.mo_title AS movieTitle,
        mi.m_img_url AS movieImage
        FROM jgv.movie m
        INNER JOIN jgv.movie_charactor mc ON m.mo_num = mc.mo_num
        INNER JOIN jgv.charactor c ON mc.ch_num = c.ch_num
        LEFT JOIN jgv.movie_image mi ON m.mo_num = mi.mo_num
        WHERE c.ch_name = #{actorName}
        AND c.ch_job IN ('감독', '배우')
        ORDER BY m.mo_date DESC
        LIMIT 5
    </select>
</mapper>